{"ast":null,"code":"var _jsxFileName = \"/Users/adi/dev-website/src/components/Bio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Bio.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bio = () => {\n  _s();\n  const [resumeData, setResumeData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/resumeData.json'); // Replace with the actual path\n        if (response.ok) {\n          const data = await response.json();\n          setResumeData(data);\n        }\n      } catch (error) {\n        console.error('Error fetching resume data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  if (!resumeData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render your component with the fetched data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bio\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: \"work\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work\",\n        children: resumeData.resume.work.map((work, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: work.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: work.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: work.years\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: work.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: \"honors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Honors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"honors\",\n        children: resumeData.resume.Honors.map((honor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"honor-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: honor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: honor.dates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: \"publications\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Publications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"publications\",\n        children: resumeData.resume.publications.map((publication, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"publication-item\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: publication.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: \"education\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EDUCATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"education\",\n        children: resumeData.resume.education.map((education, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"education-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: education.school\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: education.degree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Graduated: \", education.graduated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: education.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Bio, \"ipeVHxvbLPbvvr0LQz729arwDzc=\");\n_c = Bio;\nexport default Bio;\nvar _c;\n$RefreshReg$(_c, \"Bio\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Bio","_s","resumeData","setResumeData","fetchData","response","fetch","ok","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","resume","work","map","index","company","title","years","description","Honors","honor","name","dates","publications","publication","content","education","school","degree","graduated","_c","$RefreshReg$"],"sources":["/Users/adi/dev-website/src/components/Bio.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Bio.css'; // Import the CSS file\n\nconst Bio = () => {\n  const [resumeData, setResumeData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/resumeData.json'); // Replace with the actual path\n        if (response.ok) {\n          const data = await response.json();\n          setResumeData(data);\n        }\n      } catch (error) {\n        console.error('Error fetching resume data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (!resumeData) {\n    return <div>Loading...</div>;\n  }\n\n  // Render your component with the fetched data\n  return (\n    <div className=\"bio\">\n\n      <div className=\"section\" id=\"work\">\n        <div className='title'>\n          <h2>Work</h2>\n        </div>\n        <div className=\"work\">\n          {resumeData.resume.work.map((work, index) => (\n            <div key={index} className=\"work-item\">\n              <h3>{work.company}</h3>\n              <p>{work.title}</p>\n              <p>{work.years}</p>\n              <p>{work.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n\n      \n\n      <div className=\"section\" id=\"honors\">\n        <div className='title'>\n          <h2>Honors</h2>\n        </div>\n        <div className=\"honors\">\n          {resumeData.resume.Honors.map((honor, index) => (\n            <div key={index} className=\"honor-item\">\n              <p>{honor.name}</p>\n              <p>{honor.dates}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"section\" id=\"publications\">\n        <div className='title'>\n          <h2>Select Publications</h2>\n        </div>\n        <div className=\"publications\">\n          {resumeData.resume.publications.map((publication, index) => (\n            <div key={index} className=\"publication-item\">\n              <p>{publication.content}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"section\" id=\"education\">\n        <div className='title'>\n          <h2>EDUCATION</h2>\n        </div>\n        <div className=\"education\">\n          {resumeData.resume.education.map((education, index) => (\n            <div key={index} className=\"education-item\">\n              <h3>{education.school}</h3>\n              <p>{education.degree}</p>\n              <p>Graduated: {education.graduated}</p>\n              <p>{education.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}